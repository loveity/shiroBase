### set log levels ###    Rlogfile
log4j.rootLogger = debug,console,Errors

### 输出到控制台 ###
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.searchLog.encoding=UTF-8
log4j.appender.console.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n
#log4j.rootLogger=debug,console

#debug,
### 输出到日志文件 , 这个在tomcat服务器启动时，会将信息输出到这里 ###
#log4j.appender.Rlogfile=org.apache.log4j.RollingFileAppender
#log4j.appender.Rlogfile.layout=org.apache.log4j.PatternLayout
####log4j.appender.Rlogfile.layout.ConversionPattern=%d %p [%c] - <%m>%n
#log4j.appender.Rlogfile.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n
#log4j.appender.Rlogfile.File=${webRoot}/logs/report.log
#log4j.appender.Rlogfile.MaxFileSize=2048KB
#log4j.appender.Rlogfile.MaxBackupIndex=10

### 保存异常信息到单独文件   ###
log4j.appender.Errors = org.apache.log4j.DailyRollingFileAppender
log4j.appender.Errors.File = ${webRoot}/logs/error.log
log4j.appender.Errors.Append = true
##这里一般只设置ERROR，这个在java中使用logger.error()就可以将异常信息写到这个文件
log4j.appender.Errors.Threshold = ERROR
log4j.appender.Errors.layout = org.apache.log4j.PatternLayout
log4j.appender.Errors.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
log4j.appender.Errors.MaxFileSize=2048KB
log4j.appender.Errors.MaxBackupIndex=10